from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time
import requests
import os
import json

# üîê Telegram Bot Token (–∑–∞–¥–∞—Ç—å –≤ Render –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID_FILE = "chat_id.txt"

if not TELEGRAM_TOKEN:
    print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    exit(1)

# –ü–æ–ª—É—á–µ–Ω–∏–µ chat_id
def get_chat_id():
    if os.path.exists(CHAT_ID_FILE):
        with open(CHAT_ID_FILE, "r") as f:
            chat_id = f.read().strip()
            print(f"‚úÖ chat_id –Ω–∞–π–¥–µ–Ω: {chat_id}")
            return chat_id
    else:
        print("‚è≥ –ñ–¥—É –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...")
        while True:
            try:
                r = requests.get(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getUpdates")
                data = r.json()
                if "result" in data and len(data["result"]) > 0:
                    chat_id = str(data["result"][-1]["message"]["chat"]["id"])
                    with open(CHAT_ID_FILE, "w") as f:
                        f.write(chat_id)
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω chat_id: {chat_id}")
                    return chat_id
                else:
                    print("üîÅ –ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –ñ–¥—É...")
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è chat_id:", e)
            time.sleep(5)

# –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è
def send_telegram_message(text):
    chat_id = get_chat_id()
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    try:
        response = requests.post(url, data={'chat_id': chat_id, 'text': text})
        if response.status_code == 200:
            print(f"üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:40]}...")
        else:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Telegram: {response.status_code} - {response.text}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram:", e)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Selenium
print("üöÄ –ó–∞–ø—É—Å–∫ headless Chrome...")
options = Options()
options.add_argument("--headless")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")
options.add_argument("--disable-gpu")
options.add_argument("--remote-debugging-port=9222")
options.add_argument("--window-size=1920,1080")

try:
    driver = webdriver.Chrome(options=options)
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome:", e)
    exit(1)

# –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ FanPay
print("üåê –û—Ç–∫—Ä—ã—Ç–∏–µ FanPay...")
driver.get("https://www.fanpay.ru/messages")
time.sleep(2)

# –ó–∞–≥—Ä—É–∑–∫–∞ cookies –∏–∑ cookies.json
if os.path.exists("cookies.json"):
    print("üç™ –ó–∞–≥—Ä—É–∑–∫–∞ cookies.json...")
    try:
        with open("cookies.json", "r") as f:
            cookies = json.load(f)
        for cookie in cookies:
            cookie.pop("sameSite", None)  # –∏–Ω–æ–≥–¥–∞ –º–µ—à–∞–µ—Ç
            driver.add_cookie(cookie)
        driver.refresh()
        print("‚úÖ Cookies –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
        time.sleep(2)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è cookies:", e)
else:
    print("‚ö†Ô∏è cookies.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
last_message = ""
print("üîÅ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω...")

while True:
    try:
        driver.get("https://www.fanpay.ru/messages")
        time.sleep(5)

        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        messages = driver.find_elements(By.CLASS_NAME, "message__text")
        print(f"üì® –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")

        if messages:
            current = messages[-1].text.strip()
            if current != last_message:
                print(f"üÜï –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {current}")
                send_telegram_message(f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ FanPay:\n\n{current}")
                last_message = current
            else:
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.")
        else:
            print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–∑–º–µ–Ω–∏–ª—Å—è).")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ:", e)

    time.sleep(30)
